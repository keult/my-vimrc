{
  "typescript.updateImportsOnFileMove.enabled": "always",
  "json.maxItemsComputed": 10000,

  "window.menuBarVisibility": "toggle",

  "workbench.tree.indent": 14,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.startupEditor": "none",

  "editor.tabSize": 2,
  "editor.detectIndentation": false,
  "editor.cursorBlinking": "solid",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.wordWrap": "off",
  "editor.minimap.enabled": false,

  "terminal.integrated.scrollback": 5000,
  "terminal.integrated.defaultLocation": "editor",
  "terminal.integrated.tabs.defaultColor": "terminal.ansiGreen",

  // Files and formatting
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "editor.formatOnSave": false,

  // VsCodeVim core
  "vim.leader": " ",
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.useCtrlKeys": true,
  "vim.autoSwitchInputMethod.enable": false,
  "vim.sneak": true,
  "vim.whichwrap": "b,s,[,]",

  // Surround / commentary (built-in features)
  "vim.surround": true,
  "vim.handleKeys": {
    "<C-c>": false,   // let VS Code handle Ctrl+C (copy)
    "<C-p>": false,    // Quick Open (files)
    "<C-f>": false,    // Find in file
    "<C-h>": false,    // we'll use leader-hjkl
    "<C-/>": false,    // Toggle line comment
    "<C-s>": false,    // Save
    "<C-k>": false,    // Often multi-cursor / command palette chord; we map splits via leader
    "<C-a>": false,    // Select all
    "<C-b>": false     // Explorer toggle if you like
  },

  // Normal-mode remaps to VS Code commands
  "vim.normalModeKeyBindingsNonRecursive": [

    // Comment line
    { "before": ["g", "c"], "commands": ["editor.action.commentLine"] },
    { "before": ["g", "c", "c"], "commands": ["editor.action.blockComment"] },

    // Window (editor group) navigation â€” Vim-like, via leader + h/j/k/l
    { "before": ["<leader>", "h"], "commands": ["workbench.action.focusLeftGroup"] },
    { "before": ["<leader>", "j"], "commands": ["workbench.action.focusBelowGroup"] },
    { "before": ["<leader> ", "k"], "commands": ["workbench.action.focusAboveGroup"] },
    { "before": ["<leader>", "l"], "commands": ["workbench.action.focusRightGroup"] },

    // Split / close
    { "before": ["<leader>", "v"], "commands": ["workbench.action.splitEditorRight"] },
    { "before": ["<leader>", "s"], "commands": ["workbench.action.splitEditorDown"] },
    { "before": ["<leader>", "q"], "commands": ["workbench.action.closeActiveEditor"] },

    // Buffers (tabs)
    { "before": ["<leader>", "b", "n"], "commands": ["workbench.action.nextEditor"] },
    { "before": ["<leader>", "b", "p"], "commands": ["workbench.action.previousEditor"] },

    // Go to definitions
    { "before": ["<leader>", "d"], "commands": ["editor.action.revealDefinition"] }, // go to definition
    { "before": ["<leader>", "r"], "commands": ["editor.action.referenceSearch.trigger"] }, // find usages/references
    { "before": ["<leader>", "R"], "commands": ["references-view.findReferences"] }, // open references in sidebar
    { "before": ["<leader>", "I"], "commands": ["references-view.findImplementations"] }, // open implementations in sidebar
    { "before": ["<leader>", "i"], "commands": ["editor.action.goToImplementation"] }, // go to implementation
  ],

  "vim.insertModeKeyBindings": [
    { "before": [ "j", "j" ], "after": [ "<Esc>" ] }

  ]
}

